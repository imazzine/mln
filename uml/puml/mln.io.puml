@startuml io

  node "External container" as external_container {
    interface "tcp/ip" as external_tcp_ip
    node "External process (V8 support)" as external_process {
      interface "ws+http" as external_websocket
      node "Main thread" as external_main_thread {
        component ExternalNode
      }
      ExternalNode --( external_websocket
    }
    external_websocket --( external_tcp_ip
  }

  node "Internal container" as internal_container {
    interface "tcp/ip" as internal_tcp_ip
    node "Internal process (V8 support)" as internal_process {
      interface "ws+http" as internal_websocket
      node "Main thread" as internal_main_thread {
        component InternalNode
      }
      InternalNode --( internal_websocket
      internal_websocket --( internal_tcp_ip
    }
  }

  cloud "Network" as network
  external_tcp_ip -- network
  internal_tcp_ip -- network 

  node "Gatway container" as gateway_container {
    interface "tcp/ip" as gateway_tcp_ip

    node "Gatway process (V8 support)" as gateway_process {
      interface "ws+http" as gateway_websocket

      node "Main thread" as gateway_main_thread {
        component Gateway
      }
    }
    network -- gateway_tcp_ip
    gateway_tcp_ip )-- gateway_websocket
    gateway_websocket )-- Gateway

    database ResourcesList
    database InternalNodes
    database ExternalNodes
    Gateway *-- ResourcesList
    Gateway *-- InternalNodes
    Gateway *-- ExternalNodes
  }
@enduml

@startuml internal_register

  title Internal node registration

  InternalNode -> Gateway: HTTP(S) GET token.mln.io
  Gateway -> Gateway: parsing token

@enduml